import React, { Component } from 'react'

class Table extends Component {
  constructor(props) {
    super(props)
    this.state = {
      users: [],
      isLoading: false,
      isError: false
    }
  }

  //async function get request

  async componentDidMount(){
    this.setState({isLoading:true})

    const response = await fetch("https://dev.vbc.cloudtaru.com:7001/franchise/ledger/103")

    if(response.ok){
      const users = await response.json()
      console.log(users)
      this.setState({users,isLoading:false})
    }else{
      this.setState({isError:true,isLoading:false})
    }
  }


  renderTableHeader = () => {
    return Object.keys(this.state.users[0]).map(attr => <th key={attr}>
      {attr.toUpperCase()}

    </th>)

  }

  renderTableRows = ()  => {
    return this.state.users.map(user => {
      return (
        <tr key={user.id}>
          <td>{user.id}</td>
          <td>{user.payment_receipt}</td>
          <td>{user.pre_transaction_balance}</td>
          <td>{user.type}</td>
          <td>{user.mode}</td>
          <td>{user.debit}</td>
          <td>{user.credit}</td>
          <td>{user.transaction_date}</td>
          <td>{user.payee}</td>
          <td>{user.payment_date}</td>
          <td>{user.post_transaction_balance}</td>
          <td>{user.franchise}</td>
          <td>{user.branch}</td>
        </tr>
      )
    })
  }
  

  render(){
    const {users,isLoading,isError} = this.state

    if(isLoading){
      return<div>Loading...</div>
    }
    if(isError){
      return <div>Error...</div>
    }

    return users.length > 0
    ?(
      <table>
        <thead>
          <tr>
            {this.renderTableHeader()}
          </tr>
        </thead>
        <tbody>
          {this.renderTableRows()}
        </tbody>
      </table>

    ):(
      <div>No Users</div>
    )
    
    
  }

}

export default Table
